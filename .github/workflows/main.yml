name: Code Scanning

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  GITHUB_TOKEN : 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
  SONAR_TOKEN : 1affd398034bd9c7d0049bcdef6fbdc624b51344
  SONAR_SERVER : http://ec2-18-116-29-192.us-east-2.compute.amazonaws.com:9000
  DEFECTDOJO_SERVER: http://ec2-18-223-247-63.us-east-2.compute.amazonaws.com:8080
jobs:

#  DAST:
#    name: Acunetix Scan DAST
#    runs-on: ubuntu-latest
#    needs: Staging
#    steps:
#      - name: Trigger Acunetix Scan
#        run: |
#              curl -k -i --request POST --url "https://3.134.174.38:3443/api/v1/scans" \
#              --header "X-Auth: 1986ad8c0a5b3df4d7028d5f3c06e936c6ee269ab7bdc496db893bb19e349b85b" --header "content-type: application/json" \
#              --data '{
#                "profile_id":"11111111-1111-1111-1111-111111111111", 
#                "schedule":{"disable":false,"start_date":null,"time_sensitive":false}, 
#                "user_authorized_to_scan":"yes", "target_id":"2dd62018-1b5f-445c-882a-28a4da07e76e"
#                }'

  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the webapplication
#   needs: Staging
    continue-on-error: true
    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: owasp/zap2docker-stable
          run: |
                mkdir /zap/wrk
                /zap/zap-full-scan.py -t https://devsecops-test.herokuapp.com -x report_zap.xml || true
                cp /zap/wrk/report_zap.xml .
                ls
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: ZAP report
           path: report_zap.xml



  EngagementZapProxy:
          name: Create engagement Zap Proxy
          runs-on: ubuntu-latest
          needs: zap_scan
          steps:
                - name: Run the build process with Docker
                  uses: addnab/docker-run-action@v3
                  with:
                      image: curlimages/curl
                      run: | 
                            curl -X 'POST' \
                            '${{ env.DEFECTDOJO_SERVER }}/api/v2/engagements/' \
                            -H 'accept: application/json' \
                            -H 'Content-Type: application/json' \
                            -H 'X-CSRFTOKEN: tJY9NWtnlqurzkvzn9R4y0uK6TOV5W2gHEU2qllNpdsaQEsd3vC9zrOtpbabmHTZ' \
                            -H "Authorization: Token 0dfc2ae06f011369f4eefbcf3e067efb9627ce09" \
                            -d '{
                            "name":"ZapProxyGithub",
                            "engagement_type": "CI/CD",
                            "target_start": "2022-06-02",
                            "target_end": "2022-06-02",
                            "product": 3
                            }'

  PublishFindingsZAPProxy:
          name: Publish findings ZAP Proxy
          runs-on: ubuntu-latest
          needs: EngagementZapProxy
          steps:
            - name: Upload report
              run: |
                    curl -X POST '${{ env.DEFECTDOJO_SERVER }}/api/v2/import-scan/' \
                    -H  "accept: application/json" \
                    -H  "Content-Type: multipart/form-data" \
                    -H  "X-CSRFToken: ujMSwx6OazuMFYFeovC7SFWNZ4MeCRS7dqRYTlAHYXBDCGvw5aoC2iWR9m5UCwts" \
                    -H "Authorization: Token 0dfc2ae06f011369f4eefbcf3e067efb9627ce09" \
                    -F "scan_date=2022-06-02" \
                    -F "minimum_severity=Info" \
                    -F "active=true" \
                    -F "verified=false" \
                    -F "scan_type=ZAP Scan" \
                    -F "product_name=gastonbarbaccia-test" \
                    -F "file=@report_zap.xml;type=text/xml" \
                    -F "engagement_name=ZapProxyGithub" \
                    -F "close_old_findings=true" \
                    -F "push_to_jira=false"