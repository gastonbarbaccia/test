name: Code Scanning

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main, develop

env:
  GITHUB_TOKEN : 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
  SONAR_TOKEN : 1affd398034bd9c7d0049bcdef6fbdc624b51344
  SONAR_SERVER : http://ec2-3-135-236-218.us-east-2.compute.amazonaws.com:9000
      
jobs:
  SonarScanner:
    runs-on: ubuntu-latest
    name: Sonar Scanner
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: yarn install --production=false
      - name: Scan code
        uses: vtex/action-sonarqube@main
        with:
          githubToken: ${{ env.GITHUB_TOKEN }}
          host: ${{ env.SONAR_SERVER }} 
          token: ${{ env.SONAR_TOKEN }} 

      
  EngagementSonarqube:
          name: Create engagement Sonarqube
          runs-on: ubuntu-latest
          needs: SonarScanner
          steps:
            - name: Run the build process with Docker
              uses: addnab/docker-run-action@v3
              with:
                  image: curlimages/curl
                  run: | 
                        curl -X 'POST' \
                        'http://ec2-3-135-244-217.us-east-2.compute.amazonaws.com:8080/api/v2/engagements/' \
                        -H 'accept: application/json' \
                        -H 'Content-Type: application/json' \
                        -H 'X-CSRFTOKEN: tJY9NWtnlqurzkvzn9R4y0uK6TOV5W2gHEU2qllNpdsaQEsd3vC9zrOtpbabmHTZ' \
                        -H "Authorization: Token 0dfc2ae06f011369f4eefbcf3e067efb9627ce09" \
                        -d '{
                        "name":"SonarqubeGithub",
                        "engagement_type": "CI/CD",
                        "target_start": "2022-06-02",
                        "target_end": "2022-06-02",
                        "product": 3
                        }'

  PublishFindingsSonar:
          name: Publish findings Sonarqube
          runs-on: ubuntu-latest
          needs: EngagementSonarqube
          steps:
            - name: Run the build process with Docker
              uses: addnab/docker-run-action@v3
              with:
                  image: curlimages/curl
                  run: |
                        curl --request POST "http://ec2-3-135-244-217.us-east-2.compute.amazonaws.com:8080/api/v2/import-scan/" \
                              --header "Authorization: Token 0dfc2ae06f011369f4eefbcf3e067efb9627ce09" \
                              --form "scan_date=\"2022-06-02\"" \
                              --form "minimum_severity=\"Info\"" \
                              --form "active=\"true\"" \
                              --form "verified=\"false\"" \
                              --form "scan_type=\"SonarQube API Import\"" \
                              --form "engagement_name=\"SonarqubeGithub\"" \
                              --form "close_old_findings=\"true\"" \
                              --form "product_name=\"gastonbarbaccia-test\"" \
                              --form "scan_type=\"SonarQube API Import\"" \
                              --form "environment=\"Default\""
                    

  dependency_check:
    runs-on: ubuntu-latest
    name: Dependency check Scan
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'    
          args: >
            --failOnCVSS 7
            --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports

    EngagementDependencyCheck:
          name: Create engagement Dependency Check
          runs-on: ubuntu-latest
          needs: dependency_check
          steps:
            - name: Run the build process with Docker
              uses: addnab/docker-run-action@v3
              with:
                  image: curlimages/curl
                  run: | 
                        curl -X 'POST' \
                        'http://ec2-3-135-244-217.us-east-2.compute.amazonaws.com:8080/api/v2/engagements/' \
                        -H 'accept: application/json' \
                        -H 'Content-Type: application/json' \
                        -H 'X-CSRFTOKEN: tJY9NWtnlqurzkvzn9R4y0uK6TOV5W2gHEU2qllNpdsaQEsd3vC9zrOtpbabmHTZ' \
                        -H "Authorization: Token 0dfc2ae06f011369f4eefbcf3e067efb9627ce09" \
                        -d '{
                        "name":"DependencyCheckGithub",
                        "engagement_type": "CI/CD",
                        "target_start": "2022-06-02",
                        "target_end": "2022-06-02",
                        "product": 3
                        }'

  trivy:
    name: Scan trivy
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build an image from Dockerfile
        run: |
          docker build -t gastonbarbaccia/test_v1 .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'gastonbarbaccia/test_v1'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
  
  EngagementTrivy:
      name: Create engagement Trivy
      runs-on: ubuntu-latest
      needs: trivy
        steps:
            - name: Run the build process with Docker
              uses: addnab/docker-run-action@v3
              with:
                  image: curlimages/curl
                  run: | 
                        curl -X 'POST' \
                        'http://ec2-3-135-244-217.us-east-2.compute.amazonaws.com:8080/api/v2/engagements/' \
                        -H 'accept: application/json' \
                        -H 'Content-Type: application/json' \
                        -H 'X-CSRFTOKEN: tJY9NWtnlqurzkvzn9R4y0uK6TOV5W2gHEU2qllNpdsaQEsd3vC9zrOtpbabmHTZ' \
                        -H "Authorization: Token 0dfc2ae06f011369f4eefbcf3e067efb9627ce09" \
                        -d '{
                        "name":"TrivyGithub",
                        "engagement_type": "CI/CD",
                        "target_start": "2022-06-02",
                        "target_end": "2022-06-02",
                        "product": 3
                        }'

