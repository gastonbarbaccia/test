name: Code Scanning

on:
  push:
    branches:
      - main
      - develop
      - zap_proxy
  pull_request:
    branches:
      - main
      - develop
      - zap_proxy

env:
  GITHUB_TOKEN : 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
  SONAR_TOKEN : 1affd398034bd9c7d0049bcdef6fbdc624b51344
  SONAR_SERVER : http://ec2-18-222-226-178.us-east-2.compute.amazonaws.com:9000
  DEFECTDOJO_SERVER : http://ec2-3-15-8-40.us-east-2.compute.amazonaws.com:8080
  ACUNETIX_SERVER: https://3.134.174.38:3443
      
jobs:
  DAST:
    runs-on: ubuntu-latest
    name: Scan the webapplication
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: zap_proxy
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.6.1
        with:
          docker_name: 'owasp/zap2docker-stable'
          target: 'https://devsecops-test.herokuapp.com/'
          cmd_options: '-x report_xml'
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: ZapProxyReport
           path: ${{github.workspace}}/report_xml.xml


  EngagementDAST:
          name: Create engagement DAST
          runs-on: ubuntu-latest
          needs: DAST
          steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: SHA-Branch
              id: vars
              shell: bash
              run: |
                    echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
                    echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
            - name: Run the build process with Docker
              uses: addnab/docker-run-action@v3
              with:
                  image: curlimages/curl
                  run: | 
                        curl -X 'POST' \
                        '${{ env.DEFECTDOJO_SERVER }}/api/v2/engagements/' \
                        -H 'accept: application/json' \
                        -H 'Content-Type: application/json' \
                        -H 'X-CSRFTOKEN: tJY9NWtnlqurzkvzn9R4y0uK6TOV5W2gHEU2qllNpdsaQEsd3vC9zrOtpbabmHTZ' \
                        -H "Authorization: Token 0dfc2ae06f011369f4eefbcf3e067efb9627ce09" \
                        -d '{
                        "name":"DAST_#${{ steps.vars.outputs.sha_short }}_${{ steps.vars.outputs.branch }}",
                        "engagement_type": "CI/CD",
                        "target_start": "2022-06-02",
                        "target_end": "2022-06-02",
                        "product": 3
                        }'
  PublishFindingsDAST:
          name: Publish findings DAST
          runs-on: ubuntu-latest
          needs: EngagementDAST
          steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: SHA-Branch
              id: vars
              shell: bash
              run: |
                    echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
                    echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
            - uses: actions/download-artifact@v2
              with:
                name: ZapProxyReport
            - name: Upload report
              run: |
                    curl -X POST '${{ env.DEFECTDOJO_SERVER }}/api/v2/import-scan/' \
                    -H  "accept: application/json" \
                    -H  "Content-Type: multipart/form-data" \
                    -H  "X-CSRFToken: ujMSwx6OazuMFYFeovC7SFWNZ4MeCRS7dqRYTlAHYXBDCGvw5aoC2iWR9m5UCwts" \
                    -H "Authorization: Token 0dfc2ae06f011369f4eefbcf3e067efb9627ce09" \
                    -F "scan_date=2022-06-02" \
                    -F "minimum_severity=Info" \
                    -F "active=true" \
                    -F "verified=false" \
                    -F "scan_type=ZAP Scan" \
                    -F "product_name=gastonbarbaccia-test" \
                    -F "file=@report_xml.xml;type=text/xml" \
                    -F "engagement_name=DAST_#${{ steps.vars.outputs.sha_short }}_${{ steps.vars.outputs.branch }}" \
                    -F "close_old_findings=true" \
                    -F "push_to_jira=false"
